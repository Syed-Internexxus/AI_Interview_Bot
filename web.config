<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <!-- 1. Handler section: point “server.js” at iisnode -->
    <handlers>
      <!--
        - “server.js” should be the entry point to your Next.js app.
        - When you run `npm run build && npm run start`, Azure (or your package.json) must ensure a 
          file named “server.js” is generated (see note below).
      -->
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" resourceType="Unspecified" />
    </handlers>

    <!-- 2. URL Rewrite: send everything (that isn’t a real file/folder) to server.js -->
    <rewrite>
      <rules>
        <rule name="NextJsApp" stopProcessing="true">
          <match url="(.*)" />
          <conditions>
            <!--
              - If the request is for an existing file/folder, serve it normally (no rewrite).
              - Otherwise, rewrite to server.js (iisnode will start/forward to Next’s custom server).
            -->
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="server.js" />
        </rule>
      </rules>
    </rewrite>

    <!-- 3. Optional: prevent access to node_modules if accidentally published -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="node_modules" />
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- 4. iisnode settings (enable logging and dev errors) -->
    <iisnode 
      loggingEnabled="true" 
      devErrorsEnabled="true" 
      maxConcurrentRequestsPerProcess="1024"
      maxNamedPipeConnectionRetry="1" />
  </system.webServer>
</configuration>
